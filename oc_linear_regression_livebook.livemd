# OC_linear_regression

```elixir
Mix.install([
  {:nimble_csv, "~> 1.2"},
  {:kino_vega_lite, "~> 0.1.7"},
  {:nx, "~> 0.4.1"}
])
```

## Récupérer les données depuis le CSV

On utilise la librairie _NimbleCSV_ pour parser le fichier CSV, puis on stocke les valeurs dans une liste formattée pour la librairie _Vega_ (des maps avec les clés `loyer` et `surface` : les noms de futurs axes du futur graphique).

```elixir
NimbleCSV.define(CSVParser, separator: ",", escape: "\r\n")

csv =
  "house.csv"
  |> File.stream!()
  |> CSVParser.parse_stream()
  |> Enum.map(fn [loyer, surface] ->
    %{surface: String.to_integer(surface), loyer: String.to_integer(loyer)}
  end)
```

On enlève les __valeurs aberrantes__ ; ici il s'agit des loyers supérieurs à __10 000€__.

```elixir
csv =
  csv
  |> Enum.filter(fn %{loyer: loyer, surface: _surface} -> loyer < 10000 end)
```

## Générer le graphique avec Vega

```elixir
VegaLite.new(width: 750, height: 500, title: "house_chart")
|> VegaLite.data_from_values(csv, only: ["surface", "loyer"])
|> VegaLite.mark(:point, filled: true, color: :green)
|> VegaLite.encode_field(:x, "surface", type: :quantitative)
|> VegaLite.encode_field(:y, "loyer", type: :quantitative)
```

_Vega_ nous permet déjà de tracer la __régression linéaire__ à partir des données issues du fichier CSV, en ajoutant simplement un nouveau layer contenant la fonction `transform`.

```elixir
VegaLite.new(width: 750, height: 500, title: "house_chart_with_linear_regression")
|> VegaLite.data_from_values(csv, only: ["surface", "loyer"])
|> VegaLite.layers([
  VegaLite.new()
  |> VegaLite.mark(:point, filled: true, color: :green)
  |> VegaLite.encode_field(:x, "surface", type: :quantitative)
  |> VegaLite.encode_field(:y, "loyer", type: :quantitative),
  VegaLite.new()
  |> VegaLite.mark(:line, color: :tomato)
  |> VegaLite.transform(regression: "loyer", on: "surface")
  |> VegaLite.encode_field(:x, "surface", type: :quantitative)
  |> VegaLite.encode_field(:y, "loyer", type: :quantitative)
])
```

## Calculer la droite de régression linéaire

```elixir

```
