# OC_linear_regression

```elixir
Mix.install([
  {:nimble_csv, "~> 1.2"},
  {:kino_vega_lite, "~> 0.1.7"}
])
```

## Getting the data from CSV file

```elixir
NimbleCSV.define(CSVParser, separator: ",", escape: "\r\n")

csv =
  "house.csv"
  |> File.stream!()
  |> CSVParser.parse_stream()
  |> Enum.map(fn [loyer, surface] ->
    %{surface: String.to_integer(surface), loyer: String.to_integer(loyer)}
  end)
```

```elixir
[loyers, surfaces] =
  csv
  |> Enum.reduce([[], []], fn %{loyer: loyer, surface: surface},
                              [loyer_list | [surface_list | _tail]] ->
    [[loyer | loyer_list], [surface | surface_list]]
  end)

linear_regression = [
  %{
    x: loyers |> Enum.min(),
    y: surfaces |> Enum.min()
  },
  %{
    x: loyers |> Enum.max(),
    y: surfaces |> Enum.max()
  }
]
```

<!-- livebook:{"attrs":{"chart_title":"house_chart","height":500,"layers":[{"chart_type":"point","color_field":"loyer","color_field_aggregate":null,"color_field_bin":false,"color_field_scale_scheme":"accent","color_field_type":"quantitative","data_variable":"csv","x_field":"surface","x_field_aggregate":null,"x_field_bin":false,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"loyer","y_field_aggregate":null,"y_field_bin":false,"y_field_scale_type":null,"y_field_type":"quantitative"},{"chart_type":"line","color_field":"__count__","color_field_aggregate":null,"color_field_bin":false,"color_field_scale_scheme":null,"color_field_type":null,"data_variable":"linear_regression","x_field":"y","x_field_aggregate":null,"x_field_bin":false,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"x","y_field_aggregate":null,"y_field_bin":false,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":750},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 750, height: 500, title: "house_chart")
|> VegaLite.layers([
  VegaLite.new()
  |> VegaLite.data_from_values(csv, only: ["surface", "loyer"])
  |> VegaLite.mark(:point)
  |> VegaLite.encode_field(:x, "surface", type: :quantitative)
  |> VegaLite.encode_field(:y, "loyer", type: :quantitative)
  |> VegaLite.encode_field(:color, "loyer", type: :quantitative, scale: [scheme: "accent"]),
  VegaLite.new()
  |> VegaLite.data_from_values(linear_regression, only: ["y", "x"])
  |> VegaLite.mark(:line)
  |> VegaLite.encode_field(:x, "y", type: :quantitative)
  |> VegaLite.encode_field(:y, "x", type: :quantitative)
  |> VegaLite.encode(:color, aggregate: :count)
])
```
